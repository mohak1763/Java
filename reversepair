import java.util.ArrayList;

public class Solution {

    private static void merge(int arr[],int l,int r,int mid){
        int left=l;
        int right=mid+1;
        ArrayList<Integer> a = new ArrayList<Integer>();
        while(left<=mid && right<=r){
            if(arr[left]<=arr[right]){
                a.add(arr[left]);
                left++;
            }
            else{
                a.add(arr[right]);
                right++;
            }
        }
        while(left<=mid){
            a.add(arr[left]);
            left++;
        }
        while(right<=r){
            a.add(arr[right]);
            right++;
        }
        for(int i=l;i<=r;i++){
            arr[i]=a.get(i-l);
        }
    }
    public static int countpair(int arr[],int l,int r,int mid){
    
        int right=mid+1;
        int cnt=0;
        for(int i=l;i<=mid;i++){
            while(right<=r && arr[i]>2 *arr[right]){
                right++;
                
         }
        cnt+=(right-(mid+1));
        }
        return cnt;
    } 
    public static int mergesort(int arr[],int l,int r){
        int cnt=0;
        if(l>=r){
            return cnt;

        }
        int mid=(l+r)/2;
        cnt+=mergesort(arr,l,mid);
        cnt+=mergesort(arr, mid+1, r);
        cnt+=countpair(arr,l,r,mid);
        merge(arr,l,r,mid);
        return cnt;

    }
    public static int team(int []skill, int n){
        return mergesort(skill, 0, n-1);
        // Write your code here.
    }
}
