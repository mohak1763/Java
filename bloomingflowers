class Solution {
    public static boolean possible(int[] arr,int days,int m,int k){
        int cnt=0;
        int noofbloom=0;
        for(int i=0;i<arr.length;i++){
            if(arr[i]<=days){
                cnt++;
            }
            else{
                noofbloom+=cnt/k;
                cnt=0;
            }
        }
        noofbloom+=cnt/k;
        return noofbloom>=m;
    }
    public static int minDays(int[] bloomDay, int m, int k) {
        long val = (long) m * k;
        int n = bloomDay.length; // Size of the array
        if (val > n) return -1;
        int maxi=Integer.MIN_VALUE;
        int mini=Integer.MAX_VALUE;
        int ans=0;
        for(int i=0;i<bloomDay.length;i++){
            maxi=Math.max(maxi,bloomDay[i]);
            mini=Math.min(mini,bloomDay[i]);
        }
        int low=mini;
        int high=maxi;
        while(low<=high){
            int mid=(low+high)/2;
            if(possible(bloomDay,mid,m,k)){
                high=mid-1;


            }
            else{
                low=mid+1;
            }
        }
        return low;
    }
}
