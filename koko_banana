class Solution {
    public static int maxi(int[] piles){
        int maxc=Integer.MIN_VALUE;
        for(int i=0;i<piles.length;i++){
            if(maxc<piles[i]){
                maxc=piles[i];
            }


        }
        return maxc;
    }
    public static int calculatehour(int[] piles,int hour){
        int thour=0;
        for(int i=0;i<piles.length;i++){
            thour+=Math.ceil((double)(piles[i]) / (double)(hour));
        }
        return thour;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int l=0;
        int high=maxi(piles);
        int ans=0;
        while(l<=high){
            int mid=(l+high)/2;
            int totalhour=calculatehour(piles,mid);
            if(totalhour<=h){
                ans=high;
                high=mid-1;
            }

            else{
                l=mid+1;
            }
        }
        return l;



        
    }
}
