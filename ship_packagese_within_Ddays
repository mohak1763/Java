class Solution {
    public int capacity(int[] arr,int mid){
        int d=1;
        int load=0;
        for(int i=0;i<arr.length;i++){
            if(load+arr[i]>mid){
                d+=1;
                load=arr[i];
            }
            else{
                load+=arr[i];
            }


        }
        return d;
    }
    public int shipWithinDays(int[] weights, int days) {

        int maxi=Integer.MIN_VALUE;
        int sum=0;
        for(int i=0;i<weights.length;i++){
            maxi=Math.max(maxi,weights[i]);
            sum+=weights[i];

        }
        int low=maxi;
        int high=sum+1;
        while(low<=high){
            int mid=(low+high)/2;
            int n=capacity(weights,mid);
            if(n<=days){
                high=mid-1;
            }
            else{
                low=mid+1;
            }
            
        }
        return low;
    }
}

