import java.util.*;

public class Solution {
    public static int lastOcc(ArrayList<Integer> arr, int n, int k){

        int s = 0;

        int e = n-1;

        int ans = -1;

        while(s <= e){

            int mid = s + (e-s)/2;

            if(arr.get(mid) == k){

                ans = mid;

                s = mid+1;

            }else if(arr.get(mid) < k){

                s = mid + 1;

            }else{

                e = mid -1;

            }

        }

        return ans;

    }

 

    public static int firstOcc(ArrayList<Integer> arr, int n, int k){

        int s = 0;

        int e = n-1;

        int ans = -1;

        while(s <= e){

            int mid = s + (e-s)/2;

            if(arr.get(mid) == k){

                ans = mid;

                e = mid-1;

            }else if(arr.get(mid) < k){

                s = mid + 1;

            }else{

                e = mid -1;

            }

        }

        return ans;

    }

 

    public static int[] firstAndLastPosition(ArrayList<Integer> arr, int n, int k) {

        int ans[] = new int[2];

        ans[0] = firstOcc(arr, n, k);

        ans[1] = lastOcc(arr, n, k);

        return ans;

    

        // Write your code here.
    }

};
